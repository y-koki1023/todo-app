{"ast":null,"code":"const initialState = {\n  todoDatas: [{\n    id: new Date().getTime(),\n    text: \"Hello\",\n    isActive: true,\n    isVisible: true,\n    priority: \"High\"\n  }],\n  currentView: 'All'\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'CHANGE_VIEW_TO_ALL') {\n    const newState = Object.assign({}, state);\n    const todos = state.todoDatas;\n    const newTodos = todos.map(todo => {\n      todo.isVisible = true;\n      return todo;\n    });\n    newState.todoDatas = newTodos;\n    console.log(newTodos);\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_VIEW_TO_ACTIVE') {\n    const newState = Object.assign({}, state);\n    const todos = state.todoDatas;\n    const newTodos = todos.map(todo => {\n      todo.isVisible = todo.isActive === true ? true : false;\n      return todo;\n    });\n    newState.todoDatas = newTodos;\n    console.log(newTodos);\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_VIEW_TO_DONE') {\n    const newState = Object.assign({}, state);\n    const todos = state.todoDatas;\n    const newTodos = todos.map(todo => {\n      todo.isVisible = todo.isActive === false ? true : false;\n      return todo;\n    });\n    newState.todoDatas = newTodos;\n    console.log(newTodos);\n    return newState;\n  }\n\n  if (action.type === 'INSERTTASK') {\n    const newState = Object.assign({}, state);\n    newState.todoDatas = [...newState.todoDatas, {\n      id: new Date().getTime(),\n      text: action.payload.text,\n      isActive: true,\n      isVisible: state.currentView === 'All' || 'Active' ? true : false,\n      priority: action.payload.priority\n    }];\n    console.log(newState);\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_STATE') {\n    const newState = Object.assign({}, state);\n    newState.todoDatas[action.id] = {\n      id: action.id,\n      text: todoDatas[action.id].text,\n      isActive: !todoDatas[action.id].isActive,\n      isVisible: state.currentView === 'All' || !todoDatas[action.id].isActive && state.currentView === 'Active' || !todoDatas[action.id].isActive && state.currentView === 'Done' ? true : false,\n      priority: action.payload.priority\n    };\n    console.log(newState);\n    /*\n    return todos.map(todo => {\n        if(todo.id === action.id){\n            todo.state = todo.state === 'Active' ? 'Done': 'Active';\n        }\n    })\n    */\n\n    return newState;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/store/reducer.js"],"names":["initialState","todoDatas","id","Date","getTime","text","isActive","isVisible","priority","currentView","reducer","state","action","type","newState","Object","assign","todos","newTodos","map","todo","console","log","payload"],"mappings":"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","sourcesContent":["const initialState = {\n    todoDatas : [{\n        id : new Date().getTime(),\n        text: \"Hello\",\n        isActive : true,\n        isVisible : true,\n        priority : \"High\"\n    }],\n    currentView : 'All'\n}\nconst reducer = (state = initialState, action) => {\n    \n    if(action.type === 'CHANGE_VIEW_TO_ALL'){\n        const newState =  Object.assign({},state)\n        const todos = state.todoDatas;\n        const newTodos = todos.map( todo => {\n            todo.isVisible = true\n            return todo\n        })\n        newState.todoDatas = newTodos\n        console.log(newTodos)\n        return newState\n    }\n    if(action.type === 'CHANGE_VIEW_TO_ACTIVE'){\n        const newState =  Object.assign({},state)\n        const todos = state.todoDatas;\n        const newTodos = todos.map( todo => {\n            todo.isVisible = todo.isActive === true ? true : false\n            return todo\n        })\n        newState.todoDatas = newTodos\n        console.log(newTodos)\n        return newState\n    }\n    if(action.type === 'CHANGE_VIEW_TO_DONE'){\n        const newState =  Object.assign({},state)\n        const todos = state.todoDatas;\n        const newTodos = todos.map( todo => {\n            todo.isVisible = todo.isActive === false ? true : false\n            return todo\n        })\n        newState.todoDatas = newTodos\n        console.log(newTodos)\n        return newState\n    }\n    \n    if(action.type === 'INSERTTASK'){\n        const newState = Object.assign({},state);\n        newState.todoDatas = \n            [...newState.todoDatas,\n                {\n                    id : new Date().getTime(),\n                    text: action.payload.text,\n                    isActive : true,\n                    isVisible : state.currentView === 'All' || 'Active' ? true : false,\n                    priority : action.payload.priority\n                }\n            ]\n        console.log(newState)\n        return newState\n    }\n    if(action.type === 'CHANGE_STATE'){\n        const newState = Object.assign({},state);\n        newState.todoDatas[action.id] = \n        {\n            id : action.id,\n            text: todoDatas[action.id].text,\n            isActive : !todoDatas[action.id].isActive,\n            isVisible : state.currentView === 'All' || ((!todoDatas[action.id].isActive) && state.currentView === 'Active') \n            || ((!todoDatas[action.id].isActive) && state.currentView === 'Done') ? true : false,\n            priority : action.payload.priority\n        }\n        \n        console.log(newState)\n        /*\n        return todos.map(todo => {\n            if(todo.id === action.id){\n                todo.state = todo.state === 'Active' ? 'Done': 'Active';\n            }\n        })\n        */\n       return newState\n    }\n    return state\n}\n    \n    \n\n\nexport default reducer "]},"metadata":{},"sourceType":"module"}