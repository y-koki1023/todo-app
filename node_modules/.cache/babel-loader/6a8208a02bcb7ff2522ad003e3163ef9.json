{"ast":null,"code":"const initialState = {\n  todoDatas: [{\n    id: new Date().getTime(),\n    text: \"Hello\",\n    isActive: true,\n    isVisible: true,\n    priority: \"High\"\n  }]\n};\n\nconst reducer = (state = initialState, action) => {\n  /*\n  if(action.type === 'CHANGE_VIEW_TO_ALL'){\n      const newState = Object.assign({},state);\n      newState.view = 'All'\n      return newState\n  }\n  if(action.type === 'CHANGE_VIEW_TO_ACTIVE'){\n      const newState = Object.assign({},state);\n      newState.view = 'Active'\n      return newState\n  }\n  if(action.type === 'CHANGE_VIEW_TO_DONE'){\n      const newState = Object.assign({},state);\n      newState.view = 'Done'\n      return newState\n  }\n  */\n  if (action.type === 'INSERTTASK') {\n    const newState = Object.assign({}, state);\n    newState.todoDatas = [...newState.todoDatas, {\n      id: new Date().getTime(),\n      text: action.payload.text,\n      isActive: true,\n      priority: action.payload.priority\n    }];\n    console.log(newState);\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_STATE') {\n    const newState = Object.assign({}, state);\n    newState.todoDatas[action.id] = {\n      id: action.id,\n      text: newState.todoDatas[action.id].text,\n      state: newState.todoDatas[action.id].state === 'Active' ? 'Done' : 'Active',\n      priority: newState.todoDatas[action.id].priority\n    };\n    const todos = state.todoDatas; // console.log(newState)\n\n    /*\n    return todos.map(todo => {\n        if(todo.id === action.id){\n            todo.state = todo.state === 'Active' ? 'Done': 'Active';\n        }\n    })\n    */\n\n    return;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/store/reducer.js"],"names":["initialState","todoDatas","id","Date","getTime","text","isActive","isVisible","priority","reducer","state","action","type","newState","Object","assign","payload","console","log","todos"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAG,CAAC;AACTC,IAAAA,EAAE,EAAG,IAAIC,IAAJ,GAAWC,OAAX,EADI;AAETC,IAAAA,IAAI,EAAE,OAFG;AAGTC,IAAAA,QAAQ,EAAG,IAHF;AAITC,IAAAA,SAAS,EAAG,IAJH;AAKTC,IAAAA,QAAQ,EAAG;AALF,GAAD;AADK,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC9C;;;;;;;;;;;;;;;;;AAiBA,MAAGA,MAAM,CAACC,IAAP,KAAgB,YAAnB,EAAgC;AAC5B,UAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBL,KAAjB,CAAjB;AACAG,IAAAA,QAAQ,CAACZ,SAAT,GACI,CAAC,GAAGY,QAAQ,CAACZ,SAAb,EACI;AACIC,MAAAA,EAAE,EAAG,IAAIC,IAAJ,GAAWC,OAAX,EADT;AAEIC,MAAAA,IAAI,EAAEM,MAAM,CAACK,OAAP,CAAeX,IAFzB;AAGIC,MAAAA,QAAQ,EAAG,IAHf;AAIIE,MAAAA,QAAQ,EAAGG,MAAM,CAACK,OAAP,CAAeR;AAJ9B,KADJ,CADJ;AASAS,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,WAAOA,QAAP;AACH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAgB,cAAnB,EAAkC;AAC9B,UAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBL,KAAjB,CAAjB;AACAG,IAAAA,QAAQ,CAACZ,SAAT,CAAmBU,MAAM,CAACT,EAA1B,IACA;AACIA,MAAAA,EAAE,EAAGS,MAAM,CAACT,EADhB;AAEIG,MAAAA,IAAI,EAAEQ,QAAQ,CAACZ,SAAT,CAAmBU,MAAM,CAACT,EAA1B,EAA8BG,IAFxC;AAGIK,MAAAA,KAAK,EAAGG,QAAQ,CAACZ,SAAT,CAAmBU,MAAM,CAACT,EAA1B,EAA8BQ,KAA9B,KAAwC,QAAxC,GAAmD,MAAnD,GAA4D,QAHxE;AAIIF,MAAAA,QAAQ,EAAGK,QAAQ,CAACZ,SAAT,CAAmBU,MAAM,CAACT,EAA1B,EAA8BM;AAJ7C,KADA;AAOA,UAAMW,KAAK,GAAGT,KAAK,CAACT,SAApB,CAT8B,CAW9B;;AACA;;;;;;;;AAOD;AACF;;AACD,SAAOS,KAAP;AACH,CAtDD;;AA2DA,eAAeD,OAAf","sourcesContent":["const initialState = {\n    todoDatas : [{\n        id : new Date().getTime(),\n        text: \"Hello\",\n        isActive : true,\n        isVisible : true,\n        priority : \"High\"\n    }]\n}\nconst reducer = (state = initialState, action) => {\n    /*\n    if(action.type === 'CHANGE_VIEW_TO_ALL'){\n        const newState = Object.assign({},state);\n        newState.view = 'All'\n        return newState\n    }\n    if(action.type === 'CHANGE_VIEW_TO_ACTIVE'){\n        const newState = Object.assign({},state);\n        newState.view = 'Active'\n        return newState\n    }\n    if(action.type === 'CHANGE_VIEW_TO_DONE'){\n        const newState = Object.assign({},state);\n        newState.view = 'Done'\n        return newState\n    }\n    */\n    if(action.type === 'INSERTTASK'){\n        const newState = Object.assign({},state);\n        newState.todoDatas = \n            [...newState.todoDatas,\n                {\n                    id : new Date().getTime(),\n                    text: action.payload.text,\n                    isActive : true,\n                    priority : action.payload.priority\n                }\n            ]\n        console.log(newState)\n        return newState\n    }\n    if(action.type === 'CHANGE_STATE'){\n        const newState = Object.assign({},state);\n        newState.todoDatas[action.id] = \n        {\n            id : action.id,\n            text: newState.todoDatas[action.id].text,\n            state : newState.todoDatas[action.id].state === 'Active' ? 'Done' : 'Active',\n            priority : newState.todoDatas[action.id].priority\n        }\n        const todos = state.todoDatas;\n        \n        // console.log(newState)\n        /*\n        return todos.map(todo => {\n            if(todo.id === action.id){\n                todo.state = todo.state === 'Active' ? 'Done': 'Active';\n            }\n        })\n        */\n       return \n    }\n    return state\n}\n    \n    \n\n\nexport default reducer "]},"metadata":{},"sourceType":"module"}