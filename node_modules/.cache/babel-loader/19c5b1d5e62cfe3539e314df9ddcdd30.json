{"ast":null,"code":"import _slicedToArray from \"/Users/koki1023/GitHub/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/koki1023/GitHub/todo-app/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Todo from './Todo';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todoDatas = _useState2[0],\n        setTodoDatas = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputText = _useState4[0],\n        setInputText = _useState4[1];\n\n  const _useState5 = useState('All'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        view = _useState6[0],\n        setView = _useState6[1];\n\n  let tasks = todoDatas.map(todos => view === 'All' || todos.state === view ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Todo, {\n    id: todos.id,\n    key: todos.id,\n    text: todos.text,\n    state: todos.state,\n    visible: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setTodoDatas(handleChange(todoDatas, todos.id)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" Check \")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Todo, {\n    id: todos.id,\n    key: todos.id,\n    text: todos.text,\n    state: todos.state,\n    visible: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })));\n  useEffect(() => {\n    tasks = todoDatas.map(todos => view === 'All' || todos.state == view ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Todo, {\n      id: todos.id,\n      key: todos.id,\n      text: todos.text,\n      state: todos.state,\n      visible: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => setTodoDatas(handleChange(todoDatas, todos.id)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" Check \")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Todo, {\n      id: todos.id,\n      key: todos.id,\n      text: todos.text,\n      state: todos.state,\n      visible: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setView('All'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" All \"), React.createElement(\"button\", {\n    onClick: () => setView('Active'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" Active \"), React.createElement(\"button\", {\n    onClick: () => setView('Done'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" Done \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    value: inputText,\n    onChange: event => setInputText(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setTodoDatas(setTodo(todoDatas, inputText)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" Insert \"), tasks);\n}\n\nfunction handleChange(todoDatas, id) {\n  const todoCopy = todoDatas.slice();\n  todoCopy[id - 1].state = todoCopy[id - 1].state === 'Active' ? 'Done' : 'Active';\n  console.log(todoCopy);\n  return todoCopy;\n}\n\nfunction setTodo(todoDatas, inputText) {\n  return [...todoDatas, {\n    key: todoDatas.length + 1,\n    id: todoDatas.length + 1,\n    text: inputText,\n    state: 'Active'\n  }];\n}\n/*\n<button onClick = { () => setTodoDatas( \n                [...todoDatas,\n                {\n                    id : index,\n                    text: inputText,\n                    state : 'Active' \n                }]) \n            }/>\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/components/App.js"],"names":["React","useState","useEffect","Todo","App","todoDatas","setTodoDatas","inputText","setInputText","view","setView","tasks","map","todos","state","id","text","handleChange","event","target","value","setTodo","todoCopy","slice","console","log","key","length"],"mappings":"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","sourcesContent":["\nimport React , {useState, useEffect} from 'react'\nimport Todo from './Todo'\n\n\nfunction App(){\n    const [todoDatas, setTodoDatas] = useState([]);\n    const [inputText, setInputText] = useState(\"\")\n    const [view,setView] = useState('All');\n    let tasks = todoDatas.map( (todos) => \n        view === 'All' || todos.state === view ? \n        <div>\n            <Todo id = {todos.id} key = {todos.id} text = {todos.text} state = {todos.state} visible = 'true'/> \n            <button onClick ={ ()=> setTodoDatas(handleChange(todoDatas,todos.id))}> Check </button>\n        </div>:\n        <div>\n            <Todo id = {todos.id} key = {todos.id} text = {todos.text} state = {todos.state} visible = 'false'/> \n            \n        </div>\n    ) \n    useEffect(() => {\n        tasks = todoDatas.map( (todos) => \n            view === 'All' || todos.state == view ? \n            <div>\n                <Todo id = {todos.id} key = {todos.id} text = {todos.text} state = {todos.state} visible = 'true'/> \n                <button onClick ={ ()=> setTodoDatas(handleChange(todoDatas,todos.id))}> Check </button>\n            </div>:\n            <div>\n                <Todo id = {todos.id} key = {todos.id} text = {todos.text} state = {todos.state} visible = 'false'/> \n                \n            </div>\n        )  \n        \n    });\n\n    return(\n        <div>\n            <button onClick = {() => setView ('All')}> All </button>\n            <button onClick = {() => setView ('Active')}> Active </button> \n            <button onClick = {() => setView ('Done')}> Done </button>  \n            <br />\n            <input type = 'text' value = {inputText} onChange={event => setInputText(event.target.value)}/>\n            <button onClick = { () => setTodoDatas(setTodo(todoDatas,inputText))}> Insert </button> \n            {tasks}\n        </div>\n    )\n}\n\nfunction handleChange(todoDatas,id){\n    const todoCopy = todoDatas.slice();\n    todoCopy[id -1].state = todoCopy[id - 1].state === 'Active' ? 'Done' : 'Active';\n    console.log(todoCopy);\n    return todoCopy\n}\n\nfunction setTodo(todoDatas,inputText){\n    return (\n        [...todoDatas,\n            {\n                key : todoDatas.length + 1,\n                id : todoDatas.length + 1,\n                text: inputText,\n                state : 'Active' \n            }\n        ]\n    )\n}\n/*\n<button onClick = { () => setTodoDatas( \n                [...todoDatas,\n                {\n                    id : index,\n                    text: inputText,\n                    state : 'Active' \n                }]) \n            }/>\n*/\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}