{"ast":null,"code":"import _slicedToArray from \"/Users/koki1023/GitHub/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/koki1023/GitHub/todo-app/src/components/Form.js\";\nimport React, { useState } from 'react';\n\nfunction Form(props) {\n  const _useState = useState(\"a\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.visivle == 'true' && React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: event => setText(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), props.visivle == 'true' && React.createElement(\"button\", {\n    onClick: ({\n      text\n    }) => props.function,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/components/Form.js"],"names":["React","useState","Form","props","text","setText","visivle","event","target","value","function"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA,oBACOF,QAAQ,CAAC,GAAD,CADf;AAAA;AAAA,QACTG,IADS;AAAA,QACJC,OADI;;AAGhB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,OAAN,IAAiB,MAAjB,IAA2B;AAAO,IAAA,IAAI,EAAG,MAAd;AAAqB,IAAA,KAAK,EAAIF,IAA9B;AAAoC,IAAA,QAAQ,EAAEG,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhC,EAEKN,KAAK,CAACG,OAAN,IAAiB,MAAjB,IAA2B;AAAQ,IAAA,OAAO,EAAG,CAAC;AAACF,MAAAA;AAAD,KAAD,KAAYD,KAAK,CAACO,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhC,CADJ;AAMH;;AAED,eAAeR,IAAf","sourcesContent":["import React ,{useState} from 'react'\n\nfunction Form(props){\n    const [text,setText] = useState(\"a\");\n   \n    return (\n        <div>\n            {props.visivle == 'true' && <input type = 'text' value = {text} onChange={event => setText(event.target.value)}/>}\n            {props.visivle == 'true' && <button onClick ={({text}) => props.function} />}\n        </div>\n    )\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}