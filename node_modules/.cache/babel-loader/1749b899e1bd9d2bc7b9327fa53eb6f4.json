{"ast":null,"code":"import _slicedToArray from \"/Users/koki1023/GitHub/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/koki1023/GitHub/todo-app/src/components/Todo.js\";\nimport React, { useState } from 'react';\n\nfunction Todo(props) {\n  const _useState = useState(props.state),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const isVisible = props.visible;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, isVisible == 'true' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.text), isVisible == 'true' && React.createElement(\"button\", {\n    onClick: () => setState(state == 'Active' ? 'Done' : 'Active'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \" \", state, \" \"));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/components/Todo.js"],"names":["React","useState","Todo","props","state","setState","isVisible","visible","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA,oBACSF,QAAQ,CAACE,KAAK,CAACC,KAAP,CADjB;AAAA;AAAA,QACTA,KADS;AAAA,QACHC,QADG;;AAEhB,QAAMC,SAAS,GAAGH,KAAK,CAACI,OAAxB;AACA,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,SAAS,IAAI,MAAb,IAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACK,IAAV,CAD5B,EAEKF,SAAS,IAAI,MAAb,IAAuB;AAAQ,IAAA,OAAO,EAAK,MAAMD,QAAQ,CAACD,KAAK,IAAI,QAAT,GAAoB,MAApB,GAA6B,QAA9B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6EA,KAA7E,MAF5B,CADR;AAQH;;AAED,eAAeF,IAAf","sourcesContent":["import React , {useState} from 'react'\n\nfunction Todo(props){\n    const [state,setState] = useState(props.state);\n    const isVisible = props.visible;\n    return(\n            <div>\n                {isVisible == 'true' && <p>{props.text}</p>}\n                {isVisible == 'true' && <button onClick = { () => setState(state == 'Active' ? 'Done' : 'Active')}> {state} </button>}\n            </div>\n        \n    )\n\n}\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}