{"ast":null,"code":"const initialState = {\n  todoDatas: [{\n    id: new Date().getTime(),\n    text: \"Hello\",\n    isActive: true,\n    isVisible: true,\n    priority: \"High\"\n  }]\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'CHANGE_VIEW_TO_ALL') {\n    const todos = state.todoDatas;\n    const newState = todos.map(todo => {\n      todo.isVisible = true;\n      return todo;\n    });\n    console.log(newState);\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_VIEW_TO_ACTIVE') {\n    const todos = state.todoDatas;\n    const newState = todos.map(todo => {\n      todo.isActive === true ? todo.isVisible = true : todo.isVisible = false;\n      return todo;\n    });\n    console.log(newState);\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_VIEW_TO_DONE') {\n    const todos = state.todoDatas;\n    const newState = todos.map(todo => {\n      todo.isActive === false ? todo.isVisible = true : todo.isVisible = false;\n      return todo;\n    });\n    console.log(newState);\n    return newState;\n  }\n\n  if (action.type === 'INSERTTASK') {\n    const newState = Object.assign({}, state);\n    newState.todoDatas = [...newState.todoDatas, {\n      id: new Date().getTime(),\n      text: action.payload.text,\n      isActive: true,\n      priority: action.payload.priority\n    }];\n    console.log(newState);\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_STATE') {\n    const newState = Object.assign({}, state);\n    newState.todoDatas[action.id] = {\n      id: action.id,\n      text: newState.todoDatas[action.id].text,\n      state: newState.todoDatas[action.id].state === 'Active' ? 'Done' : 'Active',\n      priority: newState.todoDatas[action.id].priority\n    };\n    const todos = state.todoDatas; // console.log(newState)\n\n    /*\n    return todos.map(todo => {\n        if(todo.id === action.id){\n            todo.state = todo.state === 'Active' ? 'Done': 'Active';\n        }\n    })\n    */\n\n    return;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/store/reducer.js"],"names":["initialState","todoDatas","id","Date","getTime","text","isActive","isVisible","priority","reducer","state","action","type","todos","newState","map","todo","console","log","Object","assign","payload"],"mappings":"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","sourcesContent":["const initialState = {\n    todoDatas : [{\n        id : new Date().getTime(),\n        text: \"Hello\",\n        isActive : true,\n        isVisible : true,\n        priority : \"High\"\n    }]\n}\nconst reducer = (state = initialState, action) => {\n    \n    if(action.type === 'CHANGE_VIEW_TO_ALL'){\n        const todos = state.todoDatas;\n        const newState = todos.map( todo => {\n            todo.isVisible = true\n            return todo\n        })\n        console.log(newState)\n        return newState\n    }\n    if(action.type === 'CHANGE_VIEW_TO_ACTIVE'){\n        const todos = state.todoDatas;\n        const newState = todos.map( todo => {\n            todo.isActive === true ? todo.isVisible = true : todo.isVisible = false\n            return todo\n        })\n        console.log(newState)\n        return newState\n    }\n    if(action.type === 'CHANGE_VIEW_TO_DONE'){\n        const todos = state.todoDatas;\n        const newState = todos.map( todo => {\n            todo.isActive === false ? todo.isVisible = true : todo.isVisible = false\n            return todo\n        })\n        console.log(newState)\n        return newState\n    }\n    \n    if(action.type === 'INSERTTASK'){\n        const newState = Object.assign({},state);\n        newState.todoDatas = \n            [...newState.todoDatas,\n                {\n                    id : new Date().getTime(),\n                    text: action.payload.text,\n                    isActive : true,\n                    priority : action.payload.priority\n                }\n            ]\n        console.log(newState)\n        return newState\n    }\n    if(action.type === 'CHANGE_STATE'){\n        const newState = Object.assign({},state);\n        newState.todoDatas[action.id] = \n        {\n            id : action.id,\n            text: newState.todoDatas[action.id].text,\n            state : newState.todoDatas[action.id].state === 'Active' ? 'Done' : 'Active',\n            priority : newState.todoDatas[action.id].priority\n        }\n        const todos = state.todoDatas;\n        \n        // console.log(newState)\n        /*\n        return todos.map(todo => {\n            if(todo.id === action.id){\n                todo.state = todo.state === 'Active' ? 'Done': 'Active';\n            }\n        })\n        */\n       return \n    }\n    return state\n}\n    \n    \n\n\nexport default reducer "]},"metadata":{},"sourceType":"module"}