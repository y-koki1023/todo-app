{"ast":null,"code":"const initialState = {\n  todoDatas: [{}],\n  currentView: 'All'\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'CHANGE_VIEW_TO_ALL') {\n    const newState = Object.assign({}, state);\n    const todos = state.todoDatas;\n    const newTodos = todos.map(todo => {\n      todo.isVisible = true;\n      return todo;\n    });\n    newState.todoDatas = newTodos;\n    newState.currentView = 'All';\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_VIEW_TO_ACTIVE') {\n    const newState = Object.assign({}, state);\n    const todos = state.todoDatas;\n    const newTodos = todos.map(todo => {\n      todo.isVisible = todo.isActive === true ? true : false;\n      return todo;\n    });\n    newState.todoDatas = newTodos;\n    newState.currentView = 'Active';\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_VIEW_TO_DONE') {\n    const newState = Object.assign({}, state);\n    const todos = state.todoDatas;\n    const newTodos = todos.map(todo => {\n      todo.isVisible = todo.isActive === false ? true : false;\n      return todo;\n    });\n    newState.todoDatas = newTodos;\n    newState.currentView = 'Done';\n    return newState;\n  }\n\n  if (action.type === 'INSERTTASK') {\n    const newState = Object.assign({}, state);\n    newState.todoDatas = [...newState.todoDatas, {\n      id: new Date().getTime(),\n      text: action.payload.text,\n      isActive: true,\n      isVisible: state.currentView === 'All' || 'Active' ? true : false,\n      priority: action.payload.priority\n    }];\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_STATE') {\n    const newState = Object.assign({}, state);\n    const todos = newState.todoDatas;\n    const newTodoData = todos.map(todo => {\n      if (todo.id === action.id) {\n        todo.isActive = !todo.isActive;\n        todo.isVisible = state.currentView === 'All' || !todo.isActive && state.currentView === 'Active' || !todo.isActive && state.currentView === 'Done' ? true : false;\n      }\n\n      return todo;\n    });\n    newState.todoDatas = newTodoData;\n    /*\n    return todos.map(todo => {\n        if(todo.id === action.id){\n            todo.state = todo.state === 'Active' ? 'Done': 'Active';\n        }\n    })\n    */\n\n    return newState;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/store/reducer.js"],"names":["initialState","todoDatas","currentView","reducer","state","action","type","newState","Object","assign","todos","newTodos","map","todo","isVisible","isActive","id","Date","getTime","text","payload","priority","newTodoData"],"mappings":"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","sourcesContent":["const initialState = {\n    todoDatas : [{}],\n    currentView : 'All'\n}\nconst reducer = (state = initialState, action) => {\n    \n    if(action.type === 'CHANGE_VIEW_TO_ALL'){\n        const newState =  Object.assign({},state)\n        const todos = state.todoDatas;\n        const newTodos = todos.map( todo => {\n            todo.isVisible = true\n            return todo\n        })\n        newState.todoDatas = newTodos\n        newState.currentView = 'All'\n        return newState\n    }\n    if(action.type === 'CHANGE_VIEW_TO_ACTIVE'){\n        const newState =  Object.assign({},state)\n        const todos = state.todoDatas;\n        const newTodos = todos.map( todo => {\n            todo.isVisible = todo.isActive === true ? true : false\n            return todo\n        })\n        newState.todoDatas = newTodos\n        newState.currentView = 'Active'\n        return newState\n    }\n    if(action.type === 'CHANGE_VIEW_TO_DONE'){\n        const newState =  Object.assign({},state)\n        const todos = state.todoDatas;\n        const newTodos = todos.map( todo => {\n            todo.isVisible = todo.isActive === false ? true : false\n            return todo\n        })\n        newState.todoDatas = newTodos\n        newState.currentView = 'Done'\n        return newState\n    }\n    \n    if(action.type === 'INSERTTASK'){\n        const newState = Object.assign({},state);\n        newState.todoDatas = \n            [...newState.todoDatas,\n                {\n                    id : new Date().getTime(),\n                    text: action.payload.text,\n                    isActive : true,\n                    isVisible : state.currentView === 'All' || 'Active' ? true : false,\n                    priority : action.payload.priority\n                }\n            ]\n\n        return newState\n    }\n    if(action.type === 'CHANGE_STATE'){\n        const newState = Object.assign({},state);\n        const todos = newState.todoDatas;\n        const newTodoData = todos.map( todo => {\n            if(todo.id === action.id){\n                todo.isActive = !todo.isActive\n                todo.isVisible = \n                state.currentView === 'All' || ((!todo.isActive) && state.currentView === 'Active') || \n                ((!todo.isActive) && state.currentView === 'Done') ? true : false \n            }\n            return todo\n        })\n        newState.todoDatas = newTodoData\n        /*\n        return todos.map(todo => {\n            if(todo.id === action.id){\n                todo.state = todo.state === 'Active' ? 'Done': 'Active';\n            }\n        })\n        */\n       return newState\n    }\n    return state\n}\n    \n    \n\n\nexport default reducer "]},"metadata":{},"sourceType":"module"}