{"ast":null,"code":"const initialState = {\n  todoDatas: [],\n  view: 'All'\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'CHANGE_VIEW_TO_ALL') {\n    return {\n      view: 'All'\n    };\n  }\n\n  if (action.type === 'CHANGE_VIEW_TO_ACTIVE') {\n    return {\n      view: 'Active'\n    };\n  }\n\n  if (action.type === 'CHANGE_VIEW_TO_DONE') {\n    return {\n      view: 'Done'\n    };\n  }\n\n  if (action.type === 'INSERTTASK') {\n    /*\n    if(!(action.payload.Text).match(/\\S/g)){\n        return {\n            todoDatas : [...state.todoDatas,]\n        }\n    }else{\n        return {\n            todoDatas : \n            [...state.todoDatas,\n                {   \n                    key : state.todoDatas.length + 1,\n                    id : state.todoDatas.length + 1,\n                    text: action.payload.Text,\n                    state : 'Active',\n                    priority : action.payload.priority\n                }\n            ]\n        }\n    }\n    */\n    return {\n      todoDatas: [...state.todoDatas, {\n        key: state.todoDatas.length + 1,\n        id: state.todoDatas.length + 1,\n        text: action.payload.Text,\n        state: 'Active',\n        priority: action.payload.priority\n      }]\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/store/reducer.js"],"names":["initialState","todoDatas","view","reducer","state","action","type","key","length","id","text","payload","Text","priority"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAG,EADK;AAEjBC,EAAAA,IAAI,EAAG;AAFU,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,MAAGA,MAAM,CAACC,IAAP,KAAgB,oBAAnB,EAAwC;AACpC,WAAO;AACHJ,MAAAA,IAAI,EAAG;AADJ,KAAP;AAGH;;AACD,MAAGG,MAAM,CAACC,IAAP,KAAgB,uBAAnB,EAA2C;AACvC,WAAO;AACHJ,MAAAA,IAAI,EAAG;AADJ,KAAP;AAGH;;AACD,MAAGG,MAAM,CAACC,IAAP,KAAgB,qBAAnB,EAAyC;AACrC,WAAO;AACHJ,MAAAA,IAAI,EAAG;AADJ,KAAP;AAGH;;AACD,MAAGG,MAAM,CAACC,IAAP,KAAgB,YAAnB,EAAgC;AAC5B;;;;;;;;;;;;;;;;;;;;AAoBD,WAAO;AACNL,MAAAA,SAAS,EACT,CAAC,GAAGG,KAAK,CAACH,SAAV,EACI;AACIM,QAAAA,GAAG,EAAGH,KAAK,CAACH,SAAN,CAAgBO,MAAhB,GAAyB,CADnC;AAEIC,QAAAA,EAAE,EAAGL,KAAK,CAACH,SAAN,CAAgBO,MAAhB,GAAyB,CAFlC;AAGIE,QAAAA,IAAI,EAAEL,MAAM,CAACM,OAAP,CAAeC,IAHzB;AAIIR,QAAAA,KAAK,EAAG,QAJZ;AAKIS,QAAAA,QAAQ,EAAGR,MAAM,CAACM,OAAP,CAAeE;AAL9B,OADJ;AAFM,KAAP;AAaF;;AAED,SAAOT,KAAP;AACH,CArDD;;AAuDA,eAAeD,OAAf","sourcesContent":["const initialState = {\n    todoDatas : [],\n    view : 'All'\n}\nconst reducer = (state = initialState, action) => {\n    if(action.type === 'CHANGE_VIEW_TO_ALL'){\n        return {\n            view : 'All'\n        }\n    }\n    if(action.type === 'CHANGE_VIEW_TO_ACTIVE'){\n        return {\n            view : 'Active'\n        }\n    }\n    if(action.type === 'CHANGE_VIEW_TO_DONE'){\n        return {\n            view : 'Done'\n        }\n    }\n    if(action.type === 'INSERTTASK'){\n        /*\n        if(!(action.payload.Text).match(/\\S/g)){\n            return {\n                todoDatas : [...state.todoDatas,]\n            }\n        }else{\n            return {\n                todoDatas : \n                [...state.todoDatas,\n                    {   \n                        key : state.todoDatas.length + 1,\n                        id : state.todoDatas.length + 1,\n                        text: action.payload.Text,\n                        state : 'Active',\n                        priority : action.payload.priority\n                    }\n                ]\n            }\n        }\n        */\n       return {\n        todoDatas : \n        [...state.todoDatas,\n            {   \n                key : state.todoDatas.length + 1,\n                id : state.todoDatas.length + 1,\n                text: action.payload.Text,\n                state : 'Active',\n                priority : action.payload.priority\n            }\n        ]\n    }\n        \n    }\n    \n    return state\n}\n\nexport default reducer "]},"metadata":{},"sourceType":"module"}