{"ast":null,"code":"const initialState = {\n  todoDatas: [],\n  view: 'All'\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'CHANGE_VIEW_TO_ALL') {\n    const newState = state;\n    newState.view = 'All';\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_VIEW_TO_ACTIVE') {\n    const newState = state;\n    newState.view = 'Active';\n    return newState;\n  }\n\n  if (action.type === 'CHANGE_VIEW_TO_DONE') {\n    const newState = state;\n    newState.view = 'Done';\n    return newState;\n  }\n\n  if (action.type === 'INSERTTASK') {\n    console.log(action.payload.Text);\n    return {\n      todoDatas: [...state.todoDatas, {\n        key: state.todoDatas.length + 1,\n        id: state.todoDatas.length + 1,\n        text: action.payload.Text,\n        state: 'Active',\n        priority: action.payload.priority\n      }]\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/store/reducer.js"],"names":["initialState","todoDatas","view","reducer","state","action","type","newState","console","log","payload","Text","key","length","id","text","priority"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAG,EADK;AAEjBC,EAAAA,IAAI,EAAG;AAFU,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,MAAGA,MAAM,CAACC,IAAP,KAAgB,oBAAnB,EAAwC;AACpC,UAAMC,QAAQ,GAAGH,KAAjB;AACAG,IAAAA,QAAQ,CAACL,IAAT,GAAgB,KAAhB;AACA,WAAOK,QAAP;AACH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAgB,uBAAnB,EAA2C;AACvC,UAAMC,QAAQ,GAAGH,KAAjB;AACAG,IAAAA,QAAQ,CAACL,IAAT,GAAgB,QAAhB;AACA,WAAOK,QAAP;AACH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAgB,qBAAnB,EAAyC;AACrC,UAAMC,QAAQ,GAAGH,KAAjB;AACAG,IAAAA,QAAQ,CAACL,IAAT,GAAgB,MAAhB;AACA,WAAOK,QAAP;AACH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAgB,YAAnB,EAAgC;AAC7BE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,OAAP,CAAeC,IAA3B;AACA,WAAO;AACFV,MAAAA,SAAS,EACT,CAAC,GAAGG,KAAK,CAACH,SAAV,EACI;AACIW,QAAAA,GAAG,EAAGR,KAAK,CAACH,SAAN,CAAgBY,MAAhB,GAAyB,CADnC;AAEIC,QAAAA,EAAE,EAAGV,KAAK,CAACH,SAAN,CAAgBY,MAAhB,GAAyB,CAFlC;AAGIE,QAAAA,IAAI,EAAEV,MAAM,CAACK,OAAP,CAAeC,IAHzB;AAIIP,QAAAA,KAAK,EAAG,QAJZ;AAKIY,QAAAA,QAAQ,EAAGX,MAAM,CAACK,OAAP,CAAeM;AAL9B,OADJ;AAFE,KAAP;AAaF;;AAED,SAAOZ,KAAP;AACH,CAlCD;;AAoCA,eAAeD,OAAf","sourcesContent":["const initialState = {\n    todoDatas : [],\n    view : 'All'\n}\nconst reducer = (state = initialState, action) => {\n    if(action.type === 'CHANGE_VIEW_TO_ALL'){\n        const newState = state;\n        newState.view = 'All'\n        return newState\n    }\n    if(action.type === 'CHANGE_VIEW_TO_ACTIVE'){\n        const newState = state;\n        newState.view = 'Active'\n        return newState\n    }\n    if(action.type === 'CHANGE_VIEW_TO_DONE'){\n        const newState = state;\n        newState.view = 'Done'\n        return newState\n    }\n    if(action.type === 'INSERTTASK'){\n       console.log(action.payload.Text)\n       return {\n            todoDatas : \n            [...state.todoDatas,\n                {   \n                    key : state.todoDatas.length + 1,\n                    id : state.todoDatas.length + 1,\n                    text: action.payload.Text,\n                    state : 'Active',\n                    priority : action.payload.priority\n                }\n            ]\n        }\n        \n    }\n    \n    return state\n}\n\nexport default reducer "]},"metadata":{},"sourceType":"module"}