{"ast":null,"code":"var _jsxFileName = \"/Users/koki1023/GitHub/todo-app/src/components/Todo.js\";\nimport React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nfunction Todo(props) {\n  const onClick = useCallback(() => props.changeState(props.id), [props.todoDatas.state]);\n  const isVisible = props.visible;\n  const priority = props.priority;\n  const style = {\n    color: priority === 'High' ? 'red' : 'black'\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, isVisible === 'true' && React.createElement(\"p\", {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \" \", props.text, \" : \", props.todoData.state, \" \"), isVisible === 'true' && React.createElement(\"button\", {\n    style: style,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Check\"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoDatas: state.todoDatas,\n    view: state.view\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeState: id => dispatch({\n      type: 'CHANGE_STATE',\n      id: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/components/Todo.js"],"names":["React","useCallback","connect","Todo","props","onClick","changeState","id","todoDatas","state","isVisible","visible","priority","style","color","text","todoData","mapStateToProps","view","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAkC,OAAlC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAChB,QAAMC,OAAO,GAAGJ,WAAW,CAAC,MAAMG,KAAK,CAACE,WAAN,CAAkBF,KAAK,CAACG,EAAxB,CAAP,EAAqC,CAACH,KAAK,CAACI,SAAN,CAAgBC,KAAjB,CAArC,CAA3B;AACA,QAAMC,SAAS,GAAGN,KAAK,CAACO,OAAxB;AACA,QAAMC,QAAQ,GAAGR,KAAK,CAACQ,QAAvB;AAEA,QAAMC,KAAK,GAAG;AACVC,IAAAA,KAAK,EAAGF,QAAQ,KAAK,MAAb,GAAsB,KAAtB,GAA8B;AAD5B,GAAd;AAIA,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,SAAS,KAAK,MAAd,IAAwB;AAAG,IAAA,KAAK,EAAIG,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqBT,KAAK,CAACW,IAA3B,SAAoCX,KAAK,CAACY,QAAN,CAAeP,KAAnD,MAD7B,EAEKC,SAAS,KAAK,MAAd,IAAwB;AAAQ,IAAA,KAAK,EAAIG,KAAjB;AAAwB,IAAA,OAAO,EAAGR,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAF7B,CADR;AAOH;;AAED,MAAMY,eAAe,GAAGR,KAAK,IAAI;AAC7B,SAAO;AACHD,IAAAA,SAAS,EAAGC,KAAK,CAACD,SADf;AAEHU,IAAAA,IAAI,EAAET,KAAK,CAACS;AAFT,GAAP;AAIH,CALD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAG;AAClC,SAAO;AACHd,IAAAA,WAAW,EAAIC,EAAD,IAAQa,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,cAAN;AAAsBd,MAAAA,EAAE,EAACA;AAAzB,KAAD;AAD3B,GAAP;AAGH,CAJD;;AAMA,eAAeL,OAAO,CAACe,eAAD,EAAiBE,kBAAjB,CAAP,CAA4ChB,IAA5C,CAAf","sourcesContent":["import React, {useCallback}  from 'react'\nimport {connect} from 'react-redux'\n\n\nfunction Todo(props){\n    const onClick = useCallback(() => props.changeState(props.id) , [props.todoDatas.state])\n    const isVisible = props.visible;\n    const priority = props.priority;\n    \n    const style = {\n        color : priority === 'High' ? 'red' : 'black'\n    }\n\n    return(\n            <div>\n                {isVisible === 'true' && <p style = {style}> {props.text} : {props.todoData.state} </p>}\n                {isVisible === 'true' && <button style = {style} onClick ={onClick}>Check</button>}\n            </div>\n    )\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        todoDatas : state.todoDatas,\n        view :state.view\n    }\n}\nconst mapDispatchToProps = dispatch =>{\n    return {\n        changeState : (id) => dispatch({type:'CHANGE_STATE', id:id})\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Todo)"]},"metadata":{},"sourceType":"module"}