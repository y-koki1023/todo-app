{"ast":null,"code":"import _slicedToArray from \"/Users/koki1023/GitHub/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/koki1023/GitHub/todo-app/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Todo from './Todo';\n\nfunction App() {\n  const _useState = useState([{\n    id: 1,\n    text: 'homeworks',\n    state: 'Active'\n  }, {\n    id: 2,\n    text: 'homework',\n    state: 'Active'\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todoDatas = _useState2[0],\n        setTodoDatas = _useState2[1];\n\n  const index = 3;\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputText = _useState4[0],\n        setInputText = _useState4[1];\n\n  const _useState5 = useState('All'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        view = _useState6[0],\n        setView = _useState6[1];\n\n  let tasks = todoDatas.map(todos => view === 'All' || todos.state === view ? React.createElement(Todo, {\n    key: todos.id,\n    text: todos.text,\n    state: todos.state,\n    visible: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }) : React.createElement(Todo, {\n    key: todos.id,\n    text: todos.text,\n    state: todos.state,\n    visible: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n  useEffect(() => {\n    tasks = todoDatas.map(todos => view === 'All' || todos.state == view ? React.createElement(Todo, {\n      key: todos.id,\n      text: todos.text,\n      state: todos.state,\n      visible: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }) : React.createElement(Todo, {\n      key: todos.id,\n      text: todos.text,\n      state: todos.state,\n      visible: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n    console.log(tasks);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setView('All'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" All \"), React.createElement(\"button\", {\n    onClick: () => setView('Active'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" Active \"), React.createElement(\"button\", {\n    onClick: () => setView('Done'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" Done \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    value: inputText,\n    onChange: event => setInputText(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setTodoDatas([...todoDatas, {\n      id: index++,\n      text: inputText,\n      state: 'Active'\n    }]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), tasks);\n}\n\nexport default App;\n/*\nimport React, { useState } from 'react';\n\nconst App = () => {\n  return <Headline />;\n};\n\nconst Headline = () => {\n  const [greeting, setGreeting] = useState(\n    'Hello Function Component!'\n  );\n\n  return (\n    <div>\n      <h1>{greeting}</h1>\n\n      <input\n        type=\"text\"\n        value={greeting}\n        onChange={event => setGreeting(event.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n*/","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/components/App.js"],"names":["React","useState","useEffect","Todo","App","id","text","state","todoDatas","setTodoDatas","index","inputText","setInputText","view","setView","tasks","map","todos","console","log","event","target","value"],"mappings":"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","sourcesContent":["\nimport React , {useState, useEffect} from 'react'\nimport Todo from './Todo'\n\n\nfunction App(){\n    const [todoDatas, setTodoDatas] = useState([\n        {\n            id: 1,\n            text: 'homeworks',\n            state : 'Active'\n        },\n        {\n            id: 2,\n            text: 'homework',\n            state : 'Active'\n        }\n\n    ]);\n    const index = 3;\n    const [inputText, setInputText] = useState(\"\")\n    const [view,setView] = useState('All');\n    let tasks = todoDatas.map( (todos) => \n        view === 'All' || todos.state === view ? <Todo key = {todos.id} text = {todos.text} state = {todos.state} visible = 'true'/> : \n        <Todo key = {todos.id} text = {todos.text} state = {todos.state} visible = 'false'/>\n    ) \n    useEffect(() => {\n        tasks = todoDatas.map( (todos) => \n            view === 'All' || todos.state == view ? \n                <Todo key = {todos.id} text = {todos.text} state = {todos.state} visible = 'true' /> : \n                <Todo key = {todos.id} text = {todos.text} state = {todos.state} visible = 'false' />\n        )  \n        console.log(tasks)  \n    });\n\n    return(\n        <div>\n            <button onClick = {() => setView ('All')}> All </button>\n            <button onClick = {() => setView ('Active')}> Active </button> \n            <button onClick = {() => setView ('Done')}> Done </button>  \n            <br />\n            <input type = 'text' value = {inputText} onChange={event => setInputText(event.target.value)}/>\n            <button onClick = { () => setTodoDatas(\n                [...todoDatas,\n                {\n                    id : index++,\n                    text: inputText,\n                    state : 'Active' \n                }]) \n            }/>\n            {tasks}\n        </div>\n    )\n}\n\n\nexport default App\n\n\n/*\nimport React, { useState } from 'react';\n\nconst App = () => {\n  return <Headline />;\n};\n\nconst Headline = () => {\n  const [greeting, setGreeting] = useState(\n    'Hello Function Component!'\n  );\n\n  return (\n    <div>\n      <h1>{greeting}</h1>\n\n      <input\n        type=\"text\"\n        value={greeting}\n        onChange={event => setGreeting(event.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n*/"]},"metadata":{},"sourceType":"module"}