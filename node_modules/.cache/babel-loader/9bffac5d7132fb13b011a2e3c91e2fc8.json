{"ast":null,"code":"var _jsxFileName = \"/Users/koki1023/GitHub/todo-app/src/components/Todo.js\";\nimport React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nfunction Todo(props) {\n  const onClick = () => props.changeState(props.todoData.id);\n\n  const style = {\n    color: todo.priority === 'High' ? 'red' : 'black'\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" \", props.todo.text, \" : \", props.todo.state, \" \"), \"}\", React.createElement(\"button\", {\n    style: style,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Check\"), \"}\");\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoDatas: state.todoDatas,\n    view: state.view\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeState: id => dispatch({\n      type: 'CHANGE_STATE',\n      id: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);","map":{"version":3,"sources":["/Users/koki1023/GitHub/todo-app/src/components/Todo.js"],"names":["React","useCallback","connect","Todo","props","onClick","changeState","todoData","id","style","color","todo","priority","text","state","mapStateToProps","todoDatas","view","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAkC,OAAlC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAChB,QAAMC,OAAO,GAAG,MAAMD,KAAK,CAACE,WAAN,CAAkBF,KAAK,CAACG,QAAN,CAAeC,EAAjC,CAAtB;;AAEA,QAAMC,KAAK,GAAG;AACVC,IAAAA,KAAK,EAAGC,IAAI,CAACC,QAAL,KAAkB,MAAlB,GAA2B,KAA3B,GAAmC;AADjC,GAAd;AAIA,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,KAAK,EAAIH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqBL,KAAK,CAACO,IAAN,CAAWE,IAAhC,SAAyCT,KAAK,CAACO,IAAN,CAAWG,KAApD,MADJ,OAEI;AAAQ,IAAA,KAAK,EAAIL,KAAjB;AAAwB,IAAA,OAAO,EAAGJ,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,MADR;AAOH;;AAED,MAAMU,eAAe,GAAGD,KAAK,IAAI;AAC7B,SAAO;AACHE,IAAAA,SAAS,EAAGF,KAAK,CAACE,SADf;AAEHC,IAAAA,IAAI,EAAEH,KAAK,CAACG;AAFT,GAAP;AAIH,CALD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAG;AAClC,SAAO;AACHb,IAAAA,WAAW,EAAIE,EAAD,IAAQW,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,cAAN;AAAsBZ,MAAAA,EAAE,EAACA;AAAzB,KAAD;AAD3B,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACa,eAAD,EAAiBG,kBAAjB,CAAP,CAA4Cf,IAA5C,CAAf","sourcesContent":["import React, {useCallback}  from 'react'\nimport {connect} from 'react-redux'\n\n\nfunction Todo(props){\n    const onClick = () => props.changeState(props.todoData.id)\n    \n    const style = {\n        color : todo.priority === 'High' ? 'red' : 'black'\n    }\n\n    return(\n            <div>\n                <p style = {style}> {props.todo.text} : {props.todo.state} </p>}\n                <button style = {style} onClick ={onClick}>Check</button>}\n            </div>\n    )\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        todoDatas : state.todoDatas,\n        view :state.view\n    }\n}\nconst mapDispatchToProps = dispatch =>{\n    return {\n        changeState : (id) => dispatch({type:'CHANGE_STATE', id:id})\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Todo)"]},"metadata":{},"sourceType":"module"}